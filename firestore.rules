rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================================================
    // FUNÇÃO REUTILIZÁVEL (OTIMIZAÇÃO)
    // =================================================================
    function isSessionMember(sessionId) {
      // Verifica se o usuário autenticado está na lista de membros da sessão.
      // Custa apenas 1 leitura, não importa quantas vezes a função seja usada.
      return request.auth != null && request.auth.uid in get(/databases/$(database)/documents/sessions/$(sessionId)).data.memberUIDs;
    }

    // =================================================================
    // REGRAS GERAIS
    // =================================================================
    match /{document=**} {
      allow read, write: if false;
    }

    // [REGRA ADICIONADA] - Corrige o erro de criação de conta.
    match /users/{userId} {
      allow create, read, update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }

    match /characters/{charId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    match /invites/{inviteId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.recipientUid || request.auth.uid == resource.data.senderId);
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.recipientUid;
      allow delete: if false;
    }

    match /sessions/{sessionId} {
      allow read: if isSessionMember(sessionId);
      allow update: if request.auth != null && request.auth.uid == resource.data.owner;
      allow create, delete: if false;

      // --- Sub-coleção: characters ---
      match /characters/{charId} {
        allow read: if isSessionMember(sessionId);
        // [REGRA CORRIGIDA] - Agora a escrita exige que o usuário seja membro da sessão.
        allow write: if isSessionMember(sessionId) && request.auth.uid == charId;
      }

      // --- Sub-coleção: messages ---
      match /messages/{messageId} {
        allow read: if isSessionMember(sessionId);
        allow create: if isSessionMember(sessionId) && (request.auth.uid == request.resource.data.uid);

        allow update, delete: if false;
      }
      
      // --- Sub-coleção: dice_rolls ---
      match /dice_rolls/{rollId} {
        allow read: if isSessionMember(sessionId);
        allow create: if isSessionMember(sessionId) && request.auth.uid == request.resource.data.uid;
        allow update, delete: if false;
      }
    }
  }
}