rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================================================
    // Funções reutilizáveis para regras mais limpas
    // =================================================================
    function isSessionMember(sessionId) {
      // Retorna true se o UID do usuário estiver na lista de membros da sessão.
      // Custa apenas uma leitura, não importa quantas vezes a função é chamada na mesma avaliação.
      return request.auth != null && request.auth.uid in get(/databases/$(database)/documents/sessions/$(sessionId)).data.memberUIDs;
    }

    // =================================================================
    // Regras das Coleções
    // =================================================================
    
    // Nega tudo por padrão. Regras específicas abaixo irão sobrescrever isso.
    match /{document=**} {
      allow read, write: if false;
    }

    // Coleção global de Personagens
    match /characters/{charId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // Coleção de Convites
    match /invites/{inviteId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.recipientUid || request.auth.uid == resource.data.senderId);
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.recipientUid;
      allow delete: if false;
    }
    
    // Coleção de Sessões
    match /sessions/{sessionId} {
      // Leitura permitida apenas para membros da sessão.
      allow read: if isSessionMember(sessionId);

      // ATUALIZAÇÃO RESTRITA: Permite que o dono atualize APENAS campos específicos.
      // Ex: Apenas a lista de membros e o turno atual podem ser alterados pelo dono.
      allow update: if request.auth != null && request.auth.uid == resource.data.owner
                      && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['memberUIDs', 'turnoAtualUid']);

      allow create, delete: if false;

      // --- Sub-coleção: Personagens da Sessão ---
      match /characters/{charId} {
        allow read: if isSessionMember(sessionId);
        
        // CORRIGIDO: Agora, a escrita exige que o usuário seja membro da sessão.
        allow write: if isSessionMember(sessionId) && request.auth.uid == charId;
      }
      
      // --- Sub-coleção: Mensagens ---
      match /messages/{messageId} {
        allow read: if isSessionMember(sessionId);
        allow create: if isSessionMember(sessionId) && 
                         ((request.auth.uid == request.resource.data.uid) || (request.resource.data.from == 'mestre'));
        allow update, delete: if false;
      }
      
      // --- Sub-coleção: Rolagens de Dados ---
      match /dice_rolls/{rollId} {
        allow read: if isSessionMember(sessionId);
        allow create: if isSessionMember(sessionId) && request.auth.uid == request.resource.data.uid;
        allow update, delete: if false;
      }
    }
  }
}