rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Coleção global de personagens para consulta rápida
    match /characters/{characterId} {
      // Permite a um usuário LISTAR personagens se estiver logado.
      // A consulta no lado do cliente DEVE filtrar pelo UID para segurança.
      allow list: if request.auth != null;

      // Permite GET, UPDATE, DELETE em um documento específico se o usuário for o dono.
      allow get, update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
      
      // Permite a criação se o UID do novo documento for o do próprio usuário.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }

    // Coleção para gerenciar convites
    match /invites/{inviteId} {
      // Permite leitura se o email do usuário for o do destinatário.
      allow read: if request.auth != null && request.auth.token.email == resource.data.recipientEmail;
      
      // Permite criação se o remetente for o usuário logado.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;

      // Permite atualização (aceitar/recusar) se o usuário for o destinatário.
      allow update: if request.auth != null && request.auth.token.email == resource.data.recipientEmail;

      // Nega a exclusão direta. O status do convite é atualizado.
      allow delete: if false;
    }

    // Coleção principal das sessões de jogo
    match /sessions/{sessionId} {
      // Permite leitura e atualização se o UID do usuário estiver na lista de membros.
      allow read, update: if request.auth != null && request.auth.uid in resource.data.memberUIDs;

      // Permite criação se o dono for o próprio usuário.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.owner;

      // === Sub-coleções da Sessão ===
      match /characters/{characterUid} {
        // Permite leitura se o usuário for membro da sessão pai.
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/sessions/$(sessionId)).data.memberUIDs;

        // Permite escrita (criação/atualização) apenas no personagem do próprio usuário.
        allow write: if request.auth != null && request.auth.uid == characterUid;
      }

      match /messages/{messageId} {
        // Permite leitura se o usuário for membro da sessão pai.
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/sessions/$(sessionId)).data.memberUIDs;

        // Permite criação de mensagem se o UID for o do próprio usuário.
        allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;

        // Nega atualização e exclusão de mensagens.
        allow update, delete: if false;
      }
    }
  }
}
#session-selection-overlay,
#narration-panel {
    flex-grow: 1; /* FAZ O PAINEL CRESCER PARA OCUPAR O ESPAÇO DISPONÍVEL */
    overflow-y: auto; /* Adiciona rolagem se o conteúdo for maior que a tela */
    padding: 25px;
    display: none; /* JS irá controlar qual painel é exibido */
    flex-direction: column;
    gap: 20px;
}
